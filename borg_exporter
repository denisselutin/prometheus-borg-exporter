#!/bin/bash +x

set -eu

TEXTFILE_COLLECTOR_DIR=/var/lib/prometheus/node-exporter
PROM_FILE=$TEXTFILE_COLLECTOR_DIR/borg.prom
TMP_FILE=$PROM_FILE.$$
REPOS=$(find /backup/ -maxdepth 4 -type d | grep "VM-BACKUP/")

for REPOSITORY in $REPOS; do

	LIST=$(borg list "$REPOSITORY" |awk '{print $1}')


	COUNTER=0
	echo 
	HOSTNAME=$(basename "$REPOSITORY")
	echo $HOSTNAME
	mkdir -p "$TEXTFILE_COLLECTOR_DIR"

	for i in $LIST; do
	  COUNTER=$((COUNTER+1))
	done
	
	BORG_INFO=$(borg info "$REPOSITORY" --last 1)
	echo $BORG_INFO
	last_backup_time=$(echo "$BORG_INFO" | grep "Time (end):" | awk '{ print $4, $5 }')
	epoch="$(date -d "${last_backup_time}" +"%s")"
	echo $epoch
	echo "borg_backup_count{host=\"${HOSTNAME}\"} $COUNTER" >> "$TMP_FILE"
	
	{
           
	  echo "borg_backup_files{host=\"${HOSTNAME}\"} $(echo "$BORG_INFO" | grep "Number of files" | awk '{print $4}')"
	  echo "borg_backup_chunks_unique{host=\"${HOSTNAME}\"} $(echo "$BORG_INFO" | grep "Chunk index" | awk '{print $3}')"
	  echo "borg_backup_chunks_total{host=\"${HOSTNAME}\"} $(echo "$BORG_INFO" | grep "Chunk index" | awk '{print $4}')"
	} >> "$TMP_FILE"

	function calc_bytes {
	  NUM=$1
	  UNIT=$2

	  case "$UNIT" in
	    kB)
	      echo "$NUM" | awk '{ print $1 * 1024 }'
	      ;;
	    MB)
	      echo "$NUM" | awk '{ print $1 * 1024 * 1024 }'
	      ;;
	    GB)
	      echo "$NUM" | awk '{ print $1 * 1024 * 1024 * 1024 }'
	      ;;
	    TB)
	      echo "$NUM" | awk '{ print $1 * 1024 * 1024 * 1024 * 1024 }'
	      ;;
	  esac
	}

	# byte size
	LAST_SIZE=$(calc_bytes $(echo "$BORG_INFO" |grep "This archive" |awk '{print $3}') $(echo "$BORG_INFO" |grep "This archive" |awk '{print $4}'))
	if [ -z "${LAST_SIZE}" ]; then
	  LAST_SIZE=0
	fi
	LAST_SIZE_COMPRESSED=$(calc_bytes $(echo "$BORG_INFO" |grep "This archive" |awk '{print $5}') $(echo "$BORG_INFO" |grep "This archive" |awk '{print $6}'))
	if [ -z "${LAST_SIZE_COMPRESSED}" ]; then
	  LAST_SIZE_COMPRESSED=0
	fi
	LAST_SIZE_DEDUP=$(calc_bytes $(echo "$BORG_INFO" |grep "This archive" |awk '{print $7}') $(echo "$BORG_INFO" |grep "This archive" |awk '{print $8}'))
	if [ -z "${LAST_SIZE_DEDUP}" ]; then
	  LAST_SIZE_DEDUP=0
	fi
	TOTAL_SIZE=$(calc_bytes $(echo "$BORG_INFO" |grep "All archives" |awk '{print $3}') $(echo "$BORG_INFO" |grep "All archives" |awk '{print $4}'))
	if [ -z "${TOTAL_SIZE}" ]; then
	  TOTAL_SIZE=0
	fi
	TOTAL_SIZE_COMPRESSED=$(calc_bytes $(echo "$BORG_INFO" |grep "All archives" |awk '{print $5}') $(echo "$BORG_INFO" |grep "All archives" |awk '{print $6}'))
	if [ -z "${TOTAL_SIZE_COMPRESSED}" ]; then
	  TOTAL_SIZE_COMPRESSED=0
	fi
	TOTAL_SIZE_DEDUP=$(calc_bytes $(echo "$BORG_INFO" |grep "All archives" |awk '{print $7}') $(echo "$BORG_INFO" |grep "All archives" |awk '{print $8}'))
	if [ -z "${LAST_SIZE_DEDUP}" ]; then
	  LAST_SIZE_DEDUP=0
	fi
	LAST_DATE=$epoch
	echo $LAST_DATE
	if [ -z "${LAST_DATE}" ]; then
	  LAST_DATE=0
        else
	  LAST_DATE="$(($(date +%s)-$epoch))"
	fi

	{
	  echo "borg_backup_last_size{host=\"${HOSTNAME}\"} $LAST_SIZE"
	  echo "borg_backup_last_size_compressed{host=\"${HOSTNAME}\"} $LAST_SIZE_COMPRESSED"
	  echo "borg_backup_last_size_dedup{host=\"${HOSTNAME}\"} $LAST_SIZE_DEDUP"
	  echo "borg_backup_total_size{host=\"${HOSTNAME}\"} $TOTAL_SIZE"
	  echo "borg_backup_total_size_compressed{host=\"${HOSTNAME}\"} $TOTAL_SIZE_COMPRESSED"
	  echo "borg_backup_total_size_dedup{host=\"${HOSTNAME}\"} $TOTAL_SIZE_DEDUP"
	  echo "borg_backup_last_date{host=\"${HOSTNAME}\"} $LAST_DATE"
	} >> "$TMP_FILE"

done
mv "$TMP_FILE" "$PROM_FILE"
